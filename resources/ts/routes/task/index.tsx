import Container from '@/components/layouts/Container';
import { rootRoute } from '@/routes/__root';
import { Link, createRoute } from '@tanstack/react-router';
import axios from 'axios';
import { useEffect, useState } from 'react';

export const TaskRoute = createRoute({
  getParentRoute: () => rootRoute,
  path: '/task',
  component: Task,
});

interface Task {
  id: number;
  title: string;
  description?: string;
}

function Task() {
  const [tasks, setTasks] = useState<Task[] | null>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function getTasks() {
      setLoading(true);
      setError(null);
      try {
        const resp = await axios.get<Task[]>('/api/tasks');
        if (resp.data !== null) {
          setTasks(resp.data);
        }
      } catch (e) {
        setError('Failed to fetch tasks.');
      } finally {
        setLoading(false);
      }
    }
    getTasks();
  }, []);

  return (
    <>
      <title>Tasks</title>
      <meta name="description" content="Generated by create-t3-app" />

      <Container>
        {loading && <p>Loading tasks...</p>}
        {error && <p className="text-red-500">{error}</p>}
        {!loading && !error && tasks?.length !== 0 && (
          <div>
            <h1>Tasks: {tasks?.length}</h1>
            {tasks?.map((task) => (
              <div key={task.id} className="mb-2">
                <Link to="/task/$taskId" params={{ taskId: String(task.id) }}>
                  <h4>{task.title}</h4>
                  <p>{task.description}</p>
                </Link>
              </div>
            ))}
          </div>
        )}
      </Container>
    </>
  );
}
