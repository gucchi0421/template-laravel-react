import { useEffect, useState } from "react"
import { rootRoute } from "@/routes/__root"
import { createRoute, useParams } from "@tanstack/react-router"
import axios from "axios"
import Container from "@/components/layouts/Container"

export const TaskIDRoute = createRoute({
    getParentRoute: () => rootRoute,
    path: '/task/$taskId',
    component: TaskID,
})

interface Task {
    id: number
    title: string
    description?: string
}

function TaskID() {
    const { taskId } = useParams({ from: "/task/$taskId" });
    const [task, setTask] = useState<Task | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        async function getTask() {
            setLoading(true);
            setError(null);
            try {
                const resp = await axios.get<Task>(`/api/task/${taskId}`)
                if (resp.data !== null) {
                    setTask(resp.data)
                }
            } catch (e) {
                setError("Failed to fetch tasks.");
            } finally {
                setLoading(false);
            }
        }
        getTask()
    }, []);

    return (
        <>
            <title>Task</title>
            <meta name="description" content="Generated by create-t3-app" />

            <Container>
                {loading && <p>Loading tasks...</p>}
                {error && <p className="text-red-500">{error}</p>}
                {!loading && !error && task &&
                    <div>
                        <h1>TaskID: {task.id}</h1>
                        <div className="mb-2">
                            <h4>{task.title}</h4>
                            <p>{task.description}</p>
                        </div>
                    </div>
                }
            </Container>
        </>
    )
}